define("log",[],function(){return function(n,t){void 0===t&&(t=!0),!0===t&&console.log(n)}}),define("Debug",["log","underscore"],function(n,t){return function(e){!0===e.Debug&&(t.has(e,"Comparator")&&t.has(e.Comparator,"Object")&&!0===e.Comparator.Object?(n("Result: "+JSON.stringify(e.Result)),n("Expected: "+JSON.stringify(e.ExpectedOutput))):(n("Result: "+e.Result),n("Expected: "+e.ExpectedOutput)))}}),define("Setup",["underscore"],function(n){return function(t){return n.isFunction(t)?t():t}}),define("promise",["rsvp"],function(n){return function(t){return new n.Promise(t)}}),define("AsyncSetup",["Setup","promise"],function(n,t){return function(e){return t(function(t){t(n(e))})}}),define("promise",["rsvp"],function(n){return function(t){return new n.Promise(t)}}),define("bIsObjectEqual",[],function(){function n(n){var t=JSON.stringify(n.Comparator),e=JSON.stringify(n.Comparand),r=!0;if(t.length==e.length)for(var o=0;o<t.length;o++)t[o]!==e[o]&&(r=!1);else r=!1;return r}return n}),define("AsyncAssertion",["promise","underscore","bIsObjectEqual"],function(n,t,e){return function(r){return n(function(n){t.has(r,"ComparisonFunction")?r.ComparisonFunction(r).then(function(t){n(t)}):n(t.has(r,"Comparator")&&t.has(r.Comparator,"Object")&&!0===r.Comparator.Object?e({Comparator:r.Result,Comparand:r.ExpectedOutput}):r.Result===r.ExpectedOutput)})}}),define("AsyncTest",["promise","Debug","AsyncSetup","AsyncAssertion"],function(n,t,e,r){return function(o){return{Name:o.Name,Run:function(){return n(function(n){e(o.Input).then(function(e){o.Function(e).then(function(e){o.Result=e,t(o),r(o).then(function(t){n(t)})})})})}}}}),define("validate",["underscore","log"],function(n,t){return function(t){if(n.has(t,"Validation")){if(!1===n.isArray(t.Validation))throw{message:"Error: Validation type was not array!"};if(!1===n.every(t.Validation,function(t){return n.isFunction(t)})&&!1===n.isEmpty(t.Validation))throw{message:"Error: Validation element type was not function!"};return n.every(t.Validation,function(n){return n(t.Data)})}}}),define("xGenerateAsyncTestValidation",["underscore"],function(n){return[function(t){if(!1===n.has(t,"Async"))throw{Message:"Error: Input does not contain the Async property."};if(n.has(t,"Async")&&!1===t.Async)throw{Message:"Error: Async property is set to false."};return!0}]}),define("xGenerateAsyncTest",["AsyncTest","validate","xGenerateAsyncTestValidation"],function(n,t,e){return function(r){return t({Data:r,Validation:e}),n(r)}});