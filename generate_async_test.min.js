define("Debug",["log","underscore"],function(n,t){return function(e){!0===e.Debug&&(t.has(e,"Comparator")&&t.has(e.Comparator,"Object")&&!0===e.Comparator.Object?(n("Result: "+JSON.stringify(e.Result)),n("Expected: "+JSON.stringify(e.ExpectedOutput))):(n("Result: "+e.Result),n("Expected: "+e.ExpectedOutput)))}}),define("Setup",["underscore"],function(n){return function(t){return n.isFunction(t)?t():t}}),define("AsyncSetup",["Setup","promise"],function(n,t){return function(e){return t(function(t){t(n(e))})}}),define("bIsObjectEqual",[],function(){function n(n){var t=JSON.stringify(n.Comparator),e=JSON.stringify(n.Comparand),r=!0;if(t.length==e.length)for(var o=0;o<t.length;o++)t[o]!==e[o]&&(r=!1);else r=!1;return r}return n}),define("AsyncAssertion",["promise","underscore","bIsObjectEqual"],function(n,t,e){return function(r){return n(function(n){t.has(r,"ComparisonFunction")?r.ComparisonFunction(r).then(function(t){n(t)}):n(t.has(r,"Comparator")&&t.has(r.Comparator,"Object")&&!0===r.Comparator.Object?e({Comparator:r.Result,Comparand:r.ExpectedOutput}):r.Result===r.ExpectedOutput)})}}),define("AsyncAction",["log","promise"],function(n,t){return function(e){return t(function(t,r){e.Function(e.Input).then(function(n){e.Result=n}).catch(function(t){e.ExceptionTest?(e.Comparator={Object:!0},e.Result=t):(n("Error: "+JSON.stringify(t),e.Debug),r({Message:"UnknownError"}))}).finally(function(){t(e.Result)})})}}),define("AsyncTest",["log","promise","Debug","AsyncSetup","AsyncAssertion","AsyncAction"],function(n,t,e,r,o,u){return function(n){return{Name:n.Name,Run:function(){return t(function(t,i){r(n.Input).then(function(r){n.Input=r,u(n).then(function(r){n.Result=r,e(n),o(n).then(function(n){t(n)})}).catch(function(n){i(n)})})})}}}}),define("xGenerateAsyncTestValidation",["underscore"],function(n){return[function(t){if(!1===n.has(t,"Async"))throw{Message:"Error: Input does not contain the Async property."};if(n.has(t,"Async")&&!1===t.Async)throw{Message:"Error: Async property is set to false."};return!0}]}),define("xGenerateAsyncTest",["AsyncTest","validate","xGenerateAsyncTestValidation"],function(n,t,e){return function(r){return t({Data:r,Validation:e}),n(r)}});